<?php

/**
 * @file
 * Module for batch importing objects from a MultiTes XML file.
 *
 * @author simonfox
 */
include_once drupal_get_path('module', 'fba_solution_pack_import_multites') . '/prevalidator.inc';
include_once drupal_get_path('module', 'fba_solution_pack_import_multites') . '/batch_ingest.inc';
include_once drupal_get_path('module', 'fba_solution_pack_import_multites') . '/relations.inc';
include_once drupal_get_path('module', 'fba_solution_pack_import_multites') . '/validator.inc';
include_once drupal_get_path('module', 'fba_solution_pack_import_multites') . '/batch_purge.inc';

define('TEMP_PID_TNR_AUTHVAR_TABLE', 'fba_pid_tnr_authvar');

/**
 * Provide definitions for menu callbacks.
 *
 * @return array
 *   Callback definitions
 */
function fba_solution_pack_import_multites_menu() {
  $items = array();
  $items['multites/prevalidator'] = array(
    'title' => 'Check MultiTes XML',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('fba_solution_pack_import_multites_form_prevalidator'),
    'access arguments' => array('access fba_solution_pack_import_multites_prevalidator content'),
    'type' => MENU_CALLBACK,
  );
  $items['multites/ingest'] = array(
    'title' => 'Import From MultiTes XML',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('fba_solution_pack_import_multites_form_ingest'),
    'access arguments' => array('access fba_solution_pack_import_multites_ingest content'),
    'type' => MENU_CALLBACK,
  );
  $items['multites/relations'] = array(
    'title' => 'Process RDF Relations After MultiTes XML ingest',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('fba_solution_pack_import_multites_form_relations'),
    'access arguments' => array('access fba_solution_pack_import_multites_relations content'),
    'type' => MENU_CALLBACK,
  );
  $items['multites/validator'] = array(
    'title' => 'Validate RDF Relations',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('fba_solution_pack_import_multites_form_validator'),
    'access arguments' => array('access fba_solution_pack_import_multites_validator content'),
    'type' => MENU_CALLBACK,
  );
  $items['multites/purge_all'] = array(
    'title' => 'purge fedora objects from multites',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('fba_solution_pack_import_multites_form_batch_purge'),
    'access arguments' => array('access fba_solution_pack_import_multites_validator content'),
    'type' => MENU_CALLBACK,
  );

  return $items;
}

/**
 * Valid permissions for this module.
 *
 * @return array
 *   An array of valid permissions for the relationship_reference module
 */
function fba_solution_pack_import_multites_perm() {
  return array('access fba_solution_pack_import_multites content');
}

/**
 * Blatantly ripped from fedora_item.inc, and altered as the
 * getElementsByTagNameNS wasn't bringing back what we require.
 *
 * Currently the Fedora API call getRelationships is reporting an uncaught
 * exception so we will parse the RELS-EXT ourselves and simulate the
 * documented behaviour.
 * @param String $relationship - filter the results to match this string.
 */
function _fba_get_relationships($item, $relationship = NULL) {
  $relationships = array();
  try {
    $relsext = $item->get_datastream_dissemination('RELS-EXT');
  } catch (exception $e) {
    drupal_set_message(t("_fba_get_relationships") . $e->getMessage(), 'error');
    return $relationships;
  }

  // Parse the RELS-EXT into an associative array.
  $relsextxml = new DOMDocument();
  $relsextxml->loadXML($relsext);
  $relsextxml->normalizeDocument();
  $rels = $relsextxml->getElementsByTagNameNS('*', '*');
  foreach ($rels as $child) {
    if (empty($relationship) || preg_match("/$relationship/", $child->tagName)) {
      $relationships[] = array(
        'subject' => $item->pid,
        'predicate' => $child->tagName,
        'object' => substr($child->getAttributeNS('http://www.w3.org/1999/02/22-rdf-syntax-ns#', 'resource'), 12),
      );
    }
  }
  return $relationships;
}

/**
 * Implements hook_fedora_repository_required_fedora_objects
 * @return array
 */
function fba_solution_pack_import_multites_fedora_repository_required_fedora_objects() {

  module_load_include('inc', 'fedora_repository', 'fedora_repository.solutionpacks');
  return array(
    'fba_solution_pack_import_multites' => array(
      'module' => 'fba_solution_pack_import_multites',
      'title' => 'FBA MultiTES Import Solution Pack',
      'objects' => array(
      ),
    ),
  );
}

/**
 *
 */
function _fba_get_pids_from_collections() {
  module_load_include('inc', 'fedora_repository', 'api/fedora_utils');

  $query = <<<EOD
  select \$object from <#ri>
    where (\$object  <info:fedora/fedora-system:def/relations-external#isMemberOfCollection> <info:fedora/vocab:collection> or
           \$object  <info:fedora/fedora-system:def/relations-external#isMemberOfCollection> <info:fedora/geo:collection>)
EOD;

  $query = htmlentities(urlencode($query));
  $content = '';
  $limit = 1000000;
  $offset = 0;
  $url = variable_get('fedora_repository_url', 'http://localhost:8080/fedora/risearch');
  $url .= "?type=tuples&flush=TRUE&format=csv&limit=$limit&offset=$offset&lang=itql&stream=on&query=" . $query;
  $content .= do_curl($url);
  $results = explode("\n", $content);
  $lines = preg_replace('/info:fedora\/|"object"/', '', $results);
  $allpids = array_values(array_filter($lines));
  return $allpids;
}
